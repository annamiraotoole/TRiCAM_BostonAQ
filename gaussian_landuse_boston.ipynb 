{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/statsmodels/compat/pandas.py:56: FutureWarning: The pandas.core.datetools module is deprecated and will be removed in a future version. Please use the pandas.tseries module instead.\n",
      "  from pandas.core import datetools\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import sys\n",
    "import numpy as np\n",
    "import scipy as sp\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import sklearn as sk\n",
    "from sklearn import mixture\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import preprocessing\n",
    "from statsmodels.tools import add_constant\n",
    "from sklearn.gaussian_process import GaussianProcessRegressor\n",
    "from sklearn.gaussian_process.kernels import RBF\n",
    "from sklearn.gaussian_process.kernels import ConstantKernel as C\n",
    "from sklearn.gaussian_process.kernels import Matern, WhiteKernel, RationalQuadratic, DotProduct\n",
    "import statsmodels.api as sm\n",
    "sns.set(style=\"ticks\")\n",
    "import random\n",
    "# import tensorflow as tf\n",
    "from matplotlib import pyplot as plt\n",
    "# import GPflow\n",
    "# import george\n",
    "# george.__version__\n",
    "# from george import kernels\n",
    "import os\n",
    "%matplotlib inline\n",
    "\n",
    "import time\n",
    "from shapely.geometry import Point\n",
    "from shapely.geometry.polygon import Polygon\n",
    "from collections import Counter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"appendedAQ.csv\")\n",
    "df_cells = pd.read_csv(\"boston_site_LU.csv\")\n",
    "\n",
    "lat = df[\"Latitude\"]\n",
    "lon = df[\"Longitude\"]\n",
    "\n",
    "df['lat_lon'] = list(zip(lat, lon))\n",
    "pts = df['lat_lon']\n",
    "del df['lat_lon']\n",
    "\n",
    "sites = df_cells[\"Site\"]\n",
    "\n",
    "AQ_width = df.shape[1]\n",
    "LU_width = df_cells.shape[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def parse_str(str_edit):\n",
    "    str_edit = str_edit.replace('[', '')\n",
    "    str_edit = str_edit.replace('(', '')\n",
    "    str_edit = str_edit.replace(']', '')\n",
    "    str_edit = str_edit.replace(')', '')\n",
    "    str_edit = str_edit.replace(',', '')\n",
    "    list = str_edit.split(' ')\n",
    "    return [(np.float64(list[0]), np.float64(list[1])), (np.float64(list[2]), np.float64(list[3])),\n",
    "            (np.float64(list[4]), np.float64(list[5])), (np.float64(list[6]), np.float64(list[7]))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def in_cell(lat, lon, cell):\n",
    "    cell_points = parse_str(cell)\n",
    "    lon_bool = lon >= cell_points[0][1] and lon <= cell_points[2][1]\n",
    "    lat_bool = lat >= cell_points[0][0] and lat <= cell_points[2][0]\n",
    "    if lat_bool and lon_bool:\n",
    "        return True\n",
    "    else:\n",
    "        return False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def add_columns(df):\n",
    "    df['Cropland'] = 0\n",
    "    df['Golf Course'] = 0\n",
    "    df['Saltwater Sandy Beach'] = 0\n",
    "    df['cemetary'] = 0\n",
    "    df['commercial'] = 0\n",
    "    df['crop_land'] = 0\n",
    "    df['forest'] = 0\n",
    "    df['high_density_residential'] = 0\n",
    "    df['industrial'] = 0\n",
    "    df['low_density_residential'] = 0\n",
    "    df['marina'] = 0\n",
    "    df['medium_density_residential'] = 0\n",
    "    df['mining'] = 0\n",
    "    df['open_land'] = 0\n",
    "    df['recreational'] = 0\n",
    "    df['transitional'] = 0\n",
    "    df['transportation'] = 0\n",
    "    df['urban_public/institutional'] = 0\n",
    "    df['waste'] = 0\n",
    "    df['water'] = 0\n",
    "    df['wetland'] = 0\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def update_proportions(AQ_df, LU_df, AQ_index, LU_index):\n",
    "    #AQ_df is the Boston AQ hourly\n",
    "    #LU_df contains the cells and the landuse\n",
    "    #AQ_index is the row of the cell that contains the point in the Boston AQ hourly df\n",
    "    #LU_index is the row of the cell that contains the point in the cell and landuse df\n",
    "    for col in range(0, LU_width - 2):#df.loc[i, 'forest'] = df.loc[i, 'forest'] + my_dict['forest']\n",
    "#         print (AQ_index, AQ_width + col, LU_index, col + 1), \"\\n\"\n",
    "#         print AQ_df.iloc[AQ_index, col + AQ_width], \"LU:\", LU_df.iloc[LU_index, col+2]\n",
    "        AQ_df.iloc[AQ_index, col + AQ_width] = LU_df.iloc[LU_index, col + 2]\n",
    "    return AQ_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df = add_columns(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "for pt in range(len(pts)): # pt is row for df\n",
    "    for cell in range(len(sites)): #cell is row for df_cells\n",
    "        if in_cell(pts[pt][1], pts[pt][0], df_cells[\"Site\"][cell]):\n",
    "            update_proportions(df, df_cells, pt, cell)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>State Code</th>\n",
       "      <th>County Code</th>\n",
       "      <th>Tribal Code</th>\n",
       "      <th>Site ID</th>\n",
       "      <th>Support Agency Code</th>\n",
       "      <th>Location Address</th>\n",
       "      <th>City Code</th>\n",
       "      <th>Postal Code</th>\n",
       "      <th>Local ID</th>\n",
       "      <th>...</th>\n",
       "      <th>medium_density_residential</th>\n",
       "      <th>mining</th>\n",
       "      <th>open_land</th>\n",
       "      <th>recreational</th>\n",
       "      <th>transitional</th>\n",
       "      <th>transportation</th>\n",
       "      <th>urban_public/institutional</th>\n",
       "      <th>waste</th>\n",
       "      <th>water</th>\n",
       "      <th>wetland</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250042</td>\n",
       "      <td>'0660</td>\n",
       "      <td>HARRISON AV</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02119</td>\n",
       "      <td>Boston Roxbury</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.01</td>\n",
       "      <td>0.07</td>\n",
       "      <td>0.19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'025</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250250044</td>\n",
       "      <td>'0660</td>\n",
       "      <td>19 Von Hillern Street</td>\n",
       "      <td>7000</td>\n",
       "      <td>'02125</td>\n",
       "      <td>Boston Von Hillern</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>68</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>467</th>\n",
       "      <td>69</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>468</th>\n",
       "      <td>70</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>71</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>470</th>\n",
       "      <td>72</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>471</th>\n",
       "      <td>73</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>472</th>\n",
       "      <td>74</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>75</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>474</th>\n",
       "      <td>76</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>475</th>\n",
       "      <td>77</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>476</th>\n",
       "      <td>78</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>79</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>478</th>\n",
       "      <td>80</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>81</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>480</th>\n",
       "      <td>82</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>481</th>\n",
       "      <td>83</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>482</th>\n",
       "      <td>84</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>483</th>\n",
       "      <td>85</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>484</th>\n",
       "      <td>86</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>485</th>\n",
       "      <td>87</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>486</th>\n",
       "      <td>88</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487</th>\n",
       "      <td>89</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>488</th>\n",
       "      <td>90</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>489</th>\n",
       "      <td>91</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>490</th>\n",
       "      <td>92</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>93</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>492</th>\n",
       "      <td>94</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>95</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>494</th>\n",
       "      <td>96</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>495</th>\n",
       "      <td>97</td>\n",
       "      <td>\\t\\t\\t\\tMA</td>\n",
       "      <td>'009</td>\n",
       "      <td>NaN</td>\n",
       "      <td>'250092006</td>\n",
       "      <td>'0660</td>\n",
       "      <td>390 PARKLAND</td>\n",
       "      <td>37490</td>\n",
       "      <td>'01905</td>\n",
       "      <td>Lynn Water Treatment Plant</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>496 rows × 54 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0 \\t\\tState Code County Code  Tribal Code     Site ID  \\\n",
       "0             0         \\t\\tMA        '025          NaN  '250250042   \n",
       "1             1     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "2             2     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "3             3     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "4             4     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "5             5     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "6             6     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "7             7     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "8             8     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "9             9     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "10           10     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "11           11     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "12           12     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "13           13     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "14           14     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "15           15     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "16           16     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "17           17     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "18           18     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "19           19     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "20           20     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "21           21     \\t\\t\\t\\tMA        '025          NaN  '250250042   \n",
       "22           22     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "23           23     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "24           24     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "25           25     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "26           26     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "27           27     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "28           28     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "29           29     \\t\\t\\t\\tMA        '025          NaN  '250250044   \n",
       "..          ...            ...         ...          ...         ...   \n",
       "466          68     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "467          69     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "468          70     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "469          71     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "470          72     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "471          73     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "472          74     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "473          75     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "474          76     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "475          77     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "476          78     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "477          79     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "478          80     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "479          81     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "480          82     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "481          83     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "482          84     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "483          85     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "484          86     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "485          87     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "486          88     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "487          89     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "488          90     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "489          91     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "490          92     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "491          93     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "492          94     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "493          95     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "494          96     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "495          97     \\t\\t\\t\\tMA        '009          NaN  '250092006   \n",
       "\n",
       "    Support Agency Code       Location Address  City Code Postal Code  \\\n",
       "0                 '0660            HARRISON AV       7000      '02119   \n",
       "1                 '0660            HARRISON AV       7000      '02119   \n",
       "2                 '0660            HARRISON AV       7000      '02119   \n",
       "3                 '0660            HARRISON AV       7000      '02119   \n",
       "4                 '0660            HARRISON AV       7000      '02119   \n",
       "5                 '0660            HARRISON AV       7000      '02119   \n",
       "6                 '0660            HARRISON AV       7000      '02119   \n",
       "7                 '0660            HARRISON AV       7000      '02119   \n",
       "8                 '0660            HARRISON AV       7000      '02119   \n",
       "9                 '0660            HARRISON AV       7000      '02119   \n",
       "10                '0660            HARRISON AV       7000      '02119   \n",
       "11                '0660            HARRISON AV       7000      '02119   \n",
       "12                '0660            HARRISON AV       7000      '02119   \n",
       "13                '0660            HARRISON AV       7000      '02119   \n",
       "14                '0660            HARRISON AV       7000      '02119   \n",
       "15                '0660            HARRISON AV       7000      '02119   \n",
       "16                '0660            HARRISON AV       7000      '02119   \n",
       "17                '0660            HARRISON AV       7000      '02119   \n",
       "18                '0660            HARRISON AV       7000      '02119   \n",
       "19                '0660            HARRISON AV       7000      '02119   \n",
       "20                '0660            HARRISON AV       7000      '02119   \n",
       "21                '0660            HARRISON AV       7000      '02119   \n",
       "22                '0660  19 Von Hillern Street       7000      '02125   \n",
       "23                '0660  19 Von Hillern Street       7000      '02125   \n",
       "24                '0660  19 Von Hillern Street       7000      '02125   \n",
       "25                '0660  19 Von Hillern Street       7000      '02125   \n",
       "26                '0660  19 Von Hillern Street       7000      '02125   \n",
       "27                '0660  19 Von Hillern Street       7000      '02125   \n",
       "28                '0660  19 Von Hillern Street       7000      '02125   \n",
       "29                '0660  19 Von Hillern Street       7000      '02125   \n",
       "..                  ...                    ...        ...         ...   \n",
       "466               '0660           390 PARKLAND      37490      '01905   \n",
       "467               '0660           390 PARKLAND      37490      '01905   \n",
       "468               '0660           390 PARKLAND      37490      '01905   \n",
       "469               '0660           390 PARKLAND      37490      '01905   \n",
       "470               '0660           390 PARKLAND      37490      '01905   \n",
       "471               '0660           390 PARKLAND      37490      '01905   \n",
       "472               '0660           390 PARKLAND      37490      '01905   \n",
       "473               '0660           390 PARKLAND      37490      '01905   \n",
       "474               '0660           390 PARKLAND      37490      '01905   \n",
       "475               '0660           390 PARKLAND      37490      '01905   \n",
       "476               '0660           390 PARKLAND      37490      '01905   \n",
       "477               '0660           390 PARKLAND      37490      '01905   \n",
       "478               '0660           390 PARKLAND      37490      '01905   \n",
       "479               '0660           390 PARKLAND      37490      '01905   \n",
       "480               '0660           390 PARKLAND      37490      '01905   \n",
       "481               '0660           390 PARKLAND      37490      '01905   \n",
       "482               '0660           390 PARKLAND      37490      '01905   \n",
       "483               '0660           390 PARKLAND      37490      '01905   \n",
       "484               '0660           390 PARKLAND      37490      '01905   \n",
       "485               '0660           390 PARKLAND      37490      '01905   \n",
       "486               '0660           390 PARKLAND      37490      '01905   \n",
       "487               '0660           390 PARKLAND      37490      '01905   \n",
       "488               '0660           390 PARKLAND      37490      '01905   \n",
       "489               '0660           390 PARKLAND      37490      '01905   \n",
       "490               '0660           390 PARKLAND      37490      '01905   \n",
       "491               '0660           390 PARKLAND      37490      '01905   \n",
       "492               '0660           390 PARKLAND      37490      '01905   \n",
       "493               '0660           390 PARKLAND      37490      '01905   \n",
       "494               '0660           390 PARKLAND      37490      '01905   \n",
       "495               '0660           390 PARKLAND      37490      '01905   \n",
       "\n",
       "                       Local ID   ...   medium_density_residential  mining  \\\n",
       "0                Boston Roxbury   ...                          0.0     0.0   \n",
       "1                Boston Roxbury   ...                          0.0     0.0   \n",
       "2                Boston Roxbury   ...                          0.0     0.0   \n",
       "3                Boston Roxbury   ...                          0.0     0.0   \n",
       "4                Boston Roxbury   ...                          0.0     0.0   \n",
       "5                Boston Roxbury   ...                          0.0     0.0   \n",
       "6                Boston Roxbury   ...                          0.0     0.0   \n",
       "7                Boston Roxbury   ...                          0.0     0.0   \n",
       "8                Boston Roxbury   ...                          0.0     0.0   \n",
       "9                Boston Roxbury   ...                          0.0     0.0   \n",
       "10               Boston Roxbury   ...                          0.0     0.0   \n",
       "11               Boston Roxbury   ...                          0.0     0.0   \n",
       "12               Boston Roxbury   ...                          0.0     0.0   \n",
       "13               Boston Roxbury   ...                          0.0     0.0   \n",
       "14               Boston Roxbury   ...                          0.0     0.0   \n",
       "15               Boston Roxbury   ...                          0.0     0.0   \n",
       "16               Boston Roxbury   ...                          0.0     0.0   \n",
       "17               Boston Roxbury   ...                          0.0     0.0   \n",
       "18               Boston Roxbury   ...                          0.0     0.0   \n",
       "19               Boston Roxbury   ...                          0.0     0.0   \n",
       "20               Boston Roxbury   ...                          0.0     0.0   \n",
       "21               Boston Roxbury   ...                          0.0     0.0   \n",
       "22           Boston Von Hillern   ...                          0.0     0.0   \n",
       "23           Boston Von Hillern   ...                          0.0     0.0   \n",
       "24           Boston Von Hillern   ...                          0.0     0.0   \n",
       "25           Boston Von Hillern   ...                          0.0     0.0   \n",
       "26           Boston Von Hillern   ...                          0.0     0.0   \n",
       "27           Boston Von Hillern   ...                          0.0     0.0   \n",
       "28           Boston Von Hillern   ...                          0.0     0.0   \n",
       "29           Boston Von Hillern   ...                          0.0     0.0   \n",
       "..                          ...   ...                          ...     ...   \n",
       "466  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "467  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "468  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "469  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "470  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "471  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "472  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "473  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "474  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "475  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "476  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "477  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "478  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "479  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "480  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "481  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "482  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "483  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "484  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "485  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "486  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "487  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "488  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "489  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "490  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "491  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "492  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "493  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "494  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "495  Lynn Water Treatment Plant   ...                          0.0     0.0   \n",
       "\n",
       "    open_land recreational transitional transportation  \\\n",
       "0        0.03         0.00         0.01           0.07   \n",
       "1        0.03         0.00         0.01           0.07   \n",
       "2        0.03         0.00         0.01           0.07   \n",
       "3        0.03         0.00         0.01           0.07   \n",
       "4        0.03         0.00         0.01           0.07   \n",
       "5        0.03         0.00         0.01           0.07   \n",
       "6        0.03         0.00         0.01           0.07   \n",
       "7        0.03         0.00         0.01           0.07   \n",
       "8        0.03         0.00         0.01           0.07   \n",
       "9        0.03         0.00         0.01           0.07   \n",
       "10       0.03         0.00         0.01           0.07   \n",
       "11       0.03         0.00         0.01           0.07   \n",
       "12       0.03         0.00         0.01           0.07   \n",
       "13       0.03         0.00         0.01           0.07   \n",
       "14       0.03         0.00         0.01           0.07   \n",
       "15       0.03         0.00         0.01           0.07   \n",
       "16       0.03         0.00         0.01           0.07   \n",
       "17       0.03         0.00         0.01           0.07   \n",
       "18       0.03         0.00         0.01           0.07   \n",
       "19       0.03         0.00         0.01           0.07   \n",
       "20       0.03         0.00         0.01           0.07   \n",
       "21       0.03         0.00         0.01           0.07   \n",
       "22       0.00         0.22         0.00           0.08   \n",
       "23       0.00         0.22         0.00           0.08   \n",
       "24       0.00         0.22         0.00           0.08   \n",
       "25       0.00         0.22         0.00           0.08   \n",
       "26       0.00         0.22         0.00           0.08   \n",
       "27       0.00         0.22         0.00           0.08   \n",
       "28       0.00         0.22         0.00           0.08   \n",
       "29       0.00         0.22         0.00           0.08   \n",
       "..        ...          ...          ...            ...   \n",
       "466      0.00         0.00         0.00           0.00   \n",
       "467      0.00         0.00         0.00           0.00   \n",
       "468      0.00         0.00         0.00           0.00   \n",
       "469      0.00         0.00         0.00           0.00   \n",
       "470      0.00         0.00         0.00           0.00   \n",
       "471      0.00         0.00         0.00           0.00   \n",
       "472      0.00         0.00         0.00           0.00   \n",
       "473      0.00         0.00         0.00           0.00   \n",
       "474      0.00         0.00         0.00           0.00   \n",
       "475      0.00         0.00         0.00           0.00   \n",
       "476      0.00         0.00         0.00           0.00   \n",
       "477      0.00         0.00         0.00           0.00   \n",
       "478      0.00         0.00         0.00           0.00   \n",
       "479      0.00         0.00         0.00           0.00   \n",
       "480      0.00         0.00         0.00           0.00   \n",
       "481      0.00         0.00         0.00           0.00   \n",
       "482      0.00         0.00         0.00           0.00   \n",
       "483      0.00         0.00         0.00           0.00   \n",
       "484      0.00         0.00         0.00           0.00   \n",
       "485      0.00         0.00         0.00           0.00   \n",
       "486      0.00         0.00         0.00           0.00   \n",
       "487      0.00         0.00         0.00           0.00   \n",
       "488      0.00         0.00         0.00           0.00   \n",
       "489      0.00         0.00         0.00           0.00   \n",
       "490      0.00         0.00         0.00           0.00   \n",
       "491      0.00         0.00         0.00           0.00   \n",
       "492      0.00         0.00         0.00           0.00   \n",
       "493      0.00         0.00         0.00           0.00   \n",
       "494      0.00         0.00         0.00           0.00   \n",
       "495      0.00         0.00         0.00           0.00   \n",
       "\n",
       "     urban_public/institutional  waste water wetland  \n",
       "0                          0.19    0.0   0.0     0.0  \n",
       "1                          0.19    0.0   0.0     0.0  \n",
       "2                          0.19    0.0   0.0     0.0  \n",
       "3                          0.19    0.0   0.0     0.0  \n",
       "4                          0.19    0.0   0.0     0.0  \n",
       "5                          0.19    0.0   0.0     0.0  \n",
       "6                          0.19    0.0   0.0     0.0  \n",
       "7                          0.19    0.0   0.0     0.0  \n",
       "8                          0.19    0.0   0.0     0.0  \n",
       "9                          0.19    0.0   0.0     0.0  \n",
       "10                         0.19    0.0   0.0     0.0  \n",
       "11                         0.19    0.0   0.0     0.0  \n",
       "12                         0.19    0.0   0.0     0.0  \n",
       "13                         0.19    0.0   0.0     0.0  \n",
       "14                         0.19    0.0   0.0     0.0  \n",
       "15                         0.19    0.0   0.0     0.0  \n",
       "16                         0.19    0.0   0.0     0.0  \n",
       "17                         0.19    0.0   0.0     0.0  \n",
       "18                         0.19    0.0   0.0     0.0  \n",
       "19                         0.19    0.0   0.0     0.0  \n",
       "20                         0.19    0.0   0.0     0.0  \n",
       "21                         0.19    0.0   0.0     0.0  \n",
       "22                         0.00    0.0   0.0     0.0  \n",
       "23                         0.00    0.0   0.0     0.0  \n",
       "24                         0.00    0.0   0.0     0.0  \n",
       "25                         0.00    0.0   0.0     0.0  \n",
       "26                         0.00    0.0   0.0     0.0  \n",
       "27                         0.00    0.0   0.0     0.0  \n",
       "28                         0.00    0.0   0.0     0.0  \n",
       "29                         0.00    0.0   0.0     0.0  \n",
       "..                          ...    ...   ...     ...  \n",
       "466                        0.00    0.0   0.0     0.0  \n",
       "467                        0.00    0.0   0.0     0.0  \n",
       "468                        0.00    0.0   0.0     0.0  \n",
       "469                        0.00    0.0   0.0     0.0  \n",
       "470                        0.00    0.0   0.0     0.0  \n",
       "471                        0.00    0.0   0.0     0.0  \n",
       "472                        0.00    0.0   0.0     0.0  \n",
       "473                        0.00    0.0   0.0     0.0  \n",
       "474                        0.00    0.0   0.0     0.0  \n",
       "475                        0.00    0.0   0.0     0.0  \n",
       "476                        0.00    0.0   0.0     0.0  \n",
       "477                        0.00    0.0   0.0     0.0  \n",
       "478                        0.00    0.0   0.0     0.0  \n",
       "479                        0.00    0.0   0.0     0.0  \n",
       "480                        0.00    0.0   0.0     0.0  \n",
       "481                        0.00    0.0   0.0     0.0  \n",
       "482                        0.00    0.0   0.0     0.0  \n",
       "483                        0.00    0.0   0.0     0.0  \n",
       "484                        0.00    0.0   0.0     0.0  \n",
       "485                        0.00    0.0   0.0     0.0  \n",
       "486                        0.00    0.0   0.0     0.0  \n",
       "487                        0.00    0.0   0.0     0.0  \n",
       "488                        0.00    0.0   0.0     0.0  \n",
       "489                        0.00    0.0   0.0     0.0  \n",
       "490                        0.00    0.0   0.0     0.0  \n",
       "491                        0.00    0.0   0.0     0.0  \n",
       "492                        0.00    0.0   0.0     0.0  \n",
       "493                        0.00    0.0   0.0     0.0  \n",
       "494                        0.00    0.0   0.0     0.0  \n",
       "495                        0.00    0.0   0.0     0.0  \n",
       "\n",
       "[496 rows x 54 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Creates Gaussian model, computs r squarred, MSE and log liklihood\n",
    "Given x_train, y_train, x_test, and y_test data, and numerical alpha value\n",
    "Prints train and test R^2\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "def gaussian(x_train, y_train, x_test, y_test, alpha):\n",
    "    \n",
    "    train_size = x_train.shape[0]\n",
    "    test_size = x_test.shape[0]\n",
    "    \n",
    "    kern = RBF(length_scale = 1)\n",
    "\n",
    "    gp = GaussianProcessRegressor(kernel=kern, alpha=alpha, optimizer='fmin_l_bfgs_b', n_restarts_optimizer=1, normalize_y=False, copy_X_train=False, random_state=None)\n",
    "    gp.fit(x_train, y_train.reshape(train_size, 1))\n",
    "\n",
    "    y_train_pred, sigma_train = gp.predict(x_train, return_std=True)\n",
    "    y_test_pred, sigma_test = gp.predict(x_test, return_std=True)\n",
    "\n",
    "    # get R^2\n",
    "    r2 = gp.score(x_train, y_train.reshape(train_size, 1))\n",
    "    r2_t = gp.score(x_test, y_test.reshape(test_size, 1))\n",
    "\n",
    "    # get MSE measurements\n",
    "    MSE_test = np.mean((y_test_pred - y_test.reshape(test_size, 1))**2)\n",
    "    MSE_train = np.mean((y_train_pred - y_train.reshape(train_size, 1))**2)\n",
    "\n",
    "    # get log likelihood\n",
    "    t=gp.log_marginal_likelihood()\n",
    "\n",
    "    # calculate AIC\n",
    "    AIC = 2*len(x_test) - 2*np.log(-t)\n",
    "    \n",
    "    # print R^2 values\n",
    "    print('mean squared error of train data with model = ' + str(MSE_train))\n",
    "    print('mean squared error of test data with model = ' + str(MSE_test))\n",
    "    print('Akaike information criterion = ' + str(AIC))\n",
    "    print('log likelihood of model = ' + str(t))\n",
    "    print('training R^2 value = ' + str(r2))\n",
    "    print('testing R^2 value = ' + str(r2_t))\n",
    "    \n",
    "    return y_train_pred, y_test_pred, gp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\"\"\"Plots predicted y values for testing set\"\"\"\n",
    "def plot_predictions(x_test, y_test, y_test_pred, x_label, y_label):\n",
    "    plt.figure(figsize=(13,8))\n",
    "    plt.plot(x_test, y_test, \".\", color=\"r\",)\n",
    "    plt.scatter(x_test, y_test_pred)\n",
    "    plt.xlabel(\"Time Occurred\")\n",
    "    plt.title(\"Predicted Boston CO2 level\")\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "pollutants = ['CO', 'SO', 'NO', 'OZO', 'PM']\n",
    "# local_path = '/Users/kaelanelson/Documents/Tricam_temporary/Boston_AQ_Hourly/'\n",
    "col_names = ['Cropland', 'Golf Course',\n",
    "       'Saltwater Sandy Beach', 'cemetary', 'commercial', 'crop_land',\n",
    "       'forest', 'high_density_residential', 'industrial',\n",
    "       'low_density_residential', 'marina', 'medium_density_residential',\n",
    "       'mining', 'open_land', 'recreational', 'transitional', 'transportation',\n",
    "       'urban_public/institutional', 'waste', 'water', 'wetland']\n",
    "\n",
    "alpha = 0.000888\n",
    "\n",
    "x_label = 'Time'\n",
    "y_label = 'Pollutant'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/ipykernel_launcher.py:16: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "  app.launch_new_instance()\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean squared error of train data with model = 0.00380611068155\n",
      "mean squared error of test data with model = 0.00256743696114\n",
      "Akaike information criterion = nan\n",
      "log likelihood of model = 155.312712675\n",
      "training R^2 value = 0.211978072131\n",
      "testing R^2 value = 0.330639328901\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/ipykernel_launcher.py:22: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/ipykernel_launcher.py:23: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/ipykernel_launcher.py:26: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/ipykernel_launcher.py:27: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
      "/Users/kaelanelson/anaconda/lib/python2.7/site-packages/ipykernel_launcher.py:33: RuntimeWarning: invalid value encountered in log\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "x and y must be the same size",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-56-395e77593dd8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     16\u001b[0m     \u001b[0my_train_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgaussian\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m     \u001b[0mplot_predictions\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_label\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_label\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-54-ea3930b9677f>\u001b[0m in \u001b[0;36mplot_predictions\u001b[0;34m(x_test, y_test, y_test_pred, x_label, y_label)\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\".\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"r\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Time Occurred\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Predicted Boston CO2 level\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/kaelanelson/anaconda/lib/python2.7/site-packages/matplotlib/pyplot.pyc\u001b[0m in \u001b[0;36mscatter\u001b[0;34m(x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, verts, edgecolors, hold, data, **kwargs)\u001b[0m\n\u001b[1;32m   3432\u001b[0m                          \u001b[0mvmin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvmin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvmax\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvmax\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3433\u001b[0m                          \u001b[0mlinewidths\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlinewidths\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverts\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3434\u001b[0;31m                          edgecolors=edgecolors, data=data, **kwargs)\n\u001b[0m\u001b[1;32m   3435\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3436\u001b[0m         \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_hold\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwashold\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/kaelanelson/anaconda/lib/python2.7/site-packages/matplotlib/__init__.pyc\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1896\u001b[0m                     warnings.warn(msg % (label_namer, func.__name__),\n\u001b[1;32m   1897\u001b[0m                                   RuntimeWarning, stacklevel=2)\n\u001b[0;32m-> 1898\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1899\u001b[0m         \u001b[0mpre_doc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1900\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mpre_doc\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/kaelanelson/anaconda/lib/python2.7/site-packages/matplotlib/axes/_axes.pyc\u001b[0m in \u001b[0;36mscatter\u001b[0;34m(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, verts, edgecolors, **kwargs)\u001b[0m\n\u001b[1;32m   3962\u001b[0m         \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mravel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3963\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3964\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"x and y must be the same size\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3965\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3966\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0ms\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: x and y must be the same size"
     ]
    },
    {
     "data": {
      "image/png": "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\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x114d3cd90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for pol in pollutants:\n",
    "\n",
    "#     filenames = get_filenames(local_path + pol + '/')\n",
    "\n",
    "#     DF = read_multiple_csvs(filenames, local_path + pol + '/')\n",
    "\n",
    "#     DF = clean_time_multiple(DF, 'Sample Collection Start Time')\n",
    "\n",
    "    train, test = train_test_split(df)\n",
    "    #df <- subset(df, select=c(g,a:f))\n",
    "    x_train = train[col_names].values\n",
    "    y_train = train[\"Measure Value\"]\n",
    "    x_test = test[col_names].values\n",
    "    y_test = test[\"Measure Value\"]\n",
    "\n",
    "    y_train_pred, y_test_pred, gp = gaussian(x_train, y_train, x_test, y_test, alpha)\n",
    "\n",
    "    plot_predictions(x_test, y_test, y_test_pred, x_label, y_label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
